name: Deploy Rails App for scuba diving repair

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Scuba diving Rails App to Raspberry Pi
    runs-on: ubuntu-latest

    steps:
      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy to Raspberry Pi
        env:
          RASPBERRY_PI_PASSWORD: ${{ secrets.RASPBERRY_PI_PASSWORD }}
          RASPBERRY_PI_IP: ${{ secrets.RASPBERRY_PI_IP }}
          SCUBADIVING_APP_DATABASE_NAME: ${{ secrets.SCUBADIVING_APP_DATABASE_NAME }}
          SCUBADIVING_APP_DATABASE_USER: ${{ secrets.SCUBADIVING_APP_DATABASE_USER }}
          SCUBADIVING_APP_DATABASE_PASSWORD: ${{ secrets.SCUBADIVING_APP_DATABASE_PASSWORD }}
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        run: |
          sshpass -p $RASPBERRY_PI_PASSWORD ssh -o StrictHostKeyChecking=no pi@$RASPBERRY_PI_IP \
          "SCUBADIVING_APP_DATABASE_NAME='$SCUBADIVING_APP_DATABASE_NAME' \
           SCUBADIVING_APP_DATABASE_USER='$SCUBADIVING_APP_DATABASE_USER' \
           SCUBADIVING_APP_DATABASE_PASSWORD='$SCUBADIVING_APP_DATABASE_PASSWORD' \
           SECRET_KEY_BASE='$SECRET_KEY_BASE' \
           bash -s" << 'EOF'
          
            # Load RVM and use Ruby 3.2.0
            source "$HOME/.rvm/scripts/rvm"
            rvm use 3.2.0 --default
          
            # Check Ruby version
            echo "Using Ruby version:"
            ruby -v

            # Upgrade RubyGems
            echo "Upgrading RubyGems..."
            gem update --system 3.2.3

            # Install bundler
            echo "Installing Bundler..."
            gem install bundler

            # Remove the old directory if it exists
            if [ -d "/var/www/html/scubadiving" ]; then
              echo "Removing old directory..."
              rm -rf /var/www/html/scubadiving
            fi

            # Clone the repository into /var/www/html
            echo "Cloning repository..."
            git clone git@github.com:elviajero971/scuba_diving_repair.git /var/www/html/scubadiving || { echo "Git clone failed"; exit 1; }

            # Change directory to the new clone
            cd /var/www/html/scubadiving || { echo "Directory not found"; exit 1; }

            # Export the secret_key_base
            echo "Exporting SECRET_KEY_BASE..."
            export SECRET_KEY_BASE=$SECRET_KEY_BASE

            # Export the database credentials
            echo "Exporting database credentials..."
            export SCUBADIVING_APP_DATABASE_NAME=$SCUBADIVING_APP_DATABASE_NAME
            export SCUBADIVING_APP_DATABASE_USER=$SCUBADIVING_APP_DATABASE_USER
            export SCUBADIVING_APP_DATABASE_PASSWORD=$SCUBADIVING_APP_DATABASE_PASSWORD
            export RAILS_ENV=production

            # Print all ENV variables
            echo "Checking all ENV variables..."
            env

            # Define the directory where your Rails app is deployed
            APP_DIR="/var/www/html/scubadiving/"

            # Define the path to the secure .env.production file
            SECURE_ENV_FILE="/var/app_credentials/scubadiving/.env.production"

            # Copy the secure .env.production file to the app folder
            echo "Copying the secure .env.production file to the Rails app directory..."
            sudo cp $SECURE_ENV_FILE $APP_DIR || { echo "Failed to copy the .env.production file"; exit 1; }

            # Install Ruby dependencies
            echo "Running bundle install..."
            bundle install --deployment --without development test || { echo "Bundle install failed"; exit 1; }

            # Run database migrations
            echo "Running database migrations..."
            RAILS_ENV=production bundle exec rake db:migrate || { echo "Database migration failed"; exit 1; }

            # Restart Apache
            echo "Restarting Apache..."
            sudo systemctl restart apache2 || { echo "Failed to restart Apache"; exit 1; }

            echo "Deployment complete."
          EOF

      - name: Cleanup
        run: rm -rf ~/.ssh
